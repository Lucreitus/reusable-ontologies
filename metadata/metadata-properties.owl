<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY dc "http://purl.org/dc/elements/1.1/" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY skos "http://www.w3.org/2004/02/skos/core#" >
    <!ENTITY xml "http://www.w3.org/XML/1998/namespace" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY metadata-annotations "http://purl.org/ninepts/metadata/metadata-annotations#" >
]>


<rdf:RDF xmlns="http://purl.org/ninepts/metadata/metadata-properties#"
     xml:base="http://purl.org/ninepts/metadata/metadata-properties"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:metadata-annotations="http://purl.org/ninepts/metadata/metadata-annotations#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:skos="http://www.w3.org/2004/02/skos/core#">
    <owl:Ontology rdf:about="http://purl.org/ninepts/metadata/metadata-properties">
        <metadata-annotations:license rdf:datatype="&xsd;anyURI">http://opensource.org/licenses/MIT</metadata-annotations:license>
        <metadata-annotations:anotherFormatOf rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-properties.ofn</metadata-annotations:anotherFormatOf>
        <metadata-annotations:competencyQuestions xml:lang="en">* What metadata information is available as data or object properties from this ontology?  And, what are the definitions/descriptions of those properties?
* What examples are available of the use of each of the concepts in this ontology?
* How do the metadata properties correspond to the annotation properties?</metadata-annotations:competencyQuestions>
        <metadata-annotations:copyright xml:lang="en">Copyright (c) 2014 Nine Points Solutions, LLC</metadata-annotations:copyright>
        <skos:prefLabel xml:lang="en">Metadata Ontology (Using Annotation, Data and Object Properties)</skos:prefLabel>
        <metadata-annotations:keyword xml:lang="en">SKOS</metadata-annotations:keyword>
        <metadata-annotations:license xml:lang="en">The MIT License (MIT)

Copyright (c) 2014 Nine Points Solutions, LLC

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</metadata-annotations:license>
        <dc:language>en-US</dc:language>
        <dc:creator>Andrea Westerinen
Nine Points Solutions, LLC</dc:creator>
        <metadata-annotations:dateCreated>2014-05-01</metadata-annotations:dateCreated>
        <metadata-annotations:keyword xml:lang="en">Dublin Core</metadata-annotations:keyword>
        <skos:editorialNote xml:lang="en">Need to add the annotations for the data and object properties</skos:editorialNote>
        <skos:editorialNote xml:lang="en">Need to define and test the competencyQueries</skos:editorialNote>
        <metadata-annotations:mimeType>application/rdf+xml</metadata-annotations:mimeType>
        <skos:scopeNote xml:lang="en">It is important to note that not all concepts are included from the Dublin Core or SKOS sources; and of the concepts that are included, only a few are also mapped to data or object properties.  A list of the omitted concepts is provided in the scopeNote of the imported metadata-annotations ontology.

What follows is a list of the metadata-annotation ontology properties that are NOT also defined as data or object properties in this ontology (and why):

 - competencyQuery, competencyQuestions and mimeType - These strings only apply to an ontology, and are not appropriate for individuals.  Hence, they are not defined as data or object properties.
 - description, keyword, label, *Label, note and *Note - These properties are simple strings that would not benefit from further refinement as data or object properties.
 - language - This property is related to the language in which an ontology, class, property or individual is expressed.  It is a simple string, based on IETF RFC 4646.  If an enumerated data type is desired (or the values of the property should be based on a different controlled vocabulary or syntax), then a property could be defined in an importing ontology.  That level of specificity is not done in this ontology.
 - rights, copyright and license - These strings are recommended to be applied at an ontology level, to define its rights.  Associating deeper semantics and defining relationships should be handled in a legal ontology, and not as &quot;simple&quot; data and object properties.

It was noted in the description for this ontology that some supporting classes/concepts are specified.  These classes are Actor, MappingDetail and Modification.  They provide context for the object properties, contributedTo, created, hasModification and mappedUsingDetail.  It is important to understand that a minimum amount of information is provided for these classes.  They are defined/described, but are purposefully underspecified to allow application- or domain-specific details to be provided in another ontology.  (In which case, the IRIs of the corresponding classes in the other ontology would be related to Actor, MappingDetail and Modification using an owl:equivalentClass axiom.)

Lastly, it should be noted that the identifier property from Dublin Core IS specified in this metadata-properties ontology, but was not included in the metadata-annotations ontology.  This is because the concept of an identifier is best defined as a functional data property for an individual.  Also, since the Dublin Core property is &quot;officially&quot; defined as an annotation property, the namespace of the identifier functional property uses the namespace of this ontology.</skos:scopeNote>
        <dc:description xml:lang="en">Ontology providing a small, basic set of metadata concepts, based on Dublin Core and SKOS.  The concepts are defined as annotation properties (in the imported metadata-annotations ontology) and several are then specified as data or object properties.  This ontology includes supporting classes/concepts when required to fully define the object properties.</dc:description>
        <metadata-annotations:keyword xml:lang="en">metadata</metadata-annotations:keyword>
        <owl:imports rdf:resource="http://purl.org/ninepts/metadata/metadata-annotations"/>
        <owl:versionIRI rdf:resource="http://purl.org/ninepts/metadata/metadata-properties/0.1.0"/>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#contributedTo -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#contributedTo">
        <rdf:type rdf:resource="&owl;IrreflexiveProperty"/>
        <rdfs:domain rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#Actor"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#correspondsTo -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#correspondsTo">
        <rdf:type rdf:resource="&owl;IrreflexiveProperty"/>
        <rdfs:subPropertyOf rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#hasMappingRelation"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#created -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#created">
        <rdf:type rdf:resource="&owl;IrreflexiveProperty"/>
        <rdfs:domain rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#Actor"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#hasMappingRelation -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#hasMappingRelation"/>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#hasModification -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#hasModification">
        <rdfs:range rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#Modification"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#isAnotherFormatOf -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#isAnotherFormatOf">
        <rdf:type rdf:resource="&owl;IrreflexiveProperty"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#mappedToTarget -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#mappedToTarget">
        <rdfs:domain rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#MappingDetail"/>
        <rdfs:subPropertyOf rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#hasMappingRelation"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#mappedUsingDetails -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#mappedUsingDetails">
        <rdfs:range rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#MappingDetail"/>
        <rdfs:subPropertyOf rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#hasMappingRelation"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#replaces -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#replaces">
        <rdf:type rdf:resource="&owl;IrreflexiveProperty"/>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#date -->

    <owl:DatatypeProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#date">
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#dateCreated -->

    <owl:DatatypeProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#dateCreated">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <rdfs:subPropertyOf rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#date"/>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#dateLastModified -->

    <owl:DatatypeProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#dateLastModified">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <rdfs:subPropertyOf rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#dateModified"/>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#dateModified -->

    <owl:DatatypeProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#dateModified">
        <rdfs:subPropertyOf rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#date"/>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#identifier -->

    <owl:DatatypeProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#identifier">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <metadata-annotations:moreSpecificThan rdf:datatype="&xsd;anyURI">http://purl.org/dc/elements/1.1/identifier</metadata-annotations:moreSpecificThan>
        <dc:description xml:lang="en">A unique, unambiguous reference to an individual.</dc:description>
        <skos:scopeNote xml:lang="en">This property is intended to operate as a GUID.  If a preferred or alternative name (which varies by language or context) is being defined, use the prefLabel or altLabel annotation properties instead.</skos:scopeNote>
        <skos:example xml:lang="en">a_functional_globally_unique_identifier</skos:example>
        <skos:prefLabel xml:lang="en">identifier</skos:prefLabel>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#Actor -->

    <owl:Class rdf:about="http://purl.org/ninepts/metadata/metadata-properties#Actor">
        <dc:description xml:lang="en">A participant in an action, activity or process.  An actor may be a person, organization, hardware or software agent, etc.</dc:description>
        <skos:prefLabel xml:lang="en">Actor</skos:prefLabel>
        <metadata-annotations:prefLabel_Plural xml:lang="en">Actors</metadata-annotations:prefLabel_Plural>
        <skos:altLabel xml:lang="en">Agent</skos:altLabel>
        <metadata-annotations:altLabel_Plural xml:lang="en">Agents</metadata-annotations:altLabel_Plural>
        <skos:scopeNote xml:lang="en">In this ontology, an Actor is used as the subject for the properties, created and contributedTo.  It is an underspecified class that is detailed in another ontology, to fit the needs of a specific application or domain. (In which case, the IRIs of the corresponding classes in the other ontology would be related using an owl:equivalentClass axiom.)</skos:scopeNote>
        <skos:example xml:lang="en">http://some_namespace/hardwareOrSoftwareAgent</skos:example>
        <skos:example xml:lang="en">http://some_namespace/organizationName</skos:example>
        <skos:example xml:lang="en">http://some_namespace/userName_or_individualInDirectoryService</skos:example>
    </owl:Class>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#MappingDetail -->

    <owl:Class rdf:about="http://purl.org/ninepts/metadata/metadata-properties#MappingDetail">
        <dc:description xml:lang="en">A class defining how a mapping of one individual to another is accomplished when a transformation or calculation must be performed.  The object property, mappedToTarget, defines the entity which is mapped TO.  Other information and properties, such as the mapping rule or syntax, are intended to be defined in another (likely application- or domain-specific) ontology.</dc:description>
        <skos:prefLabel xml:lang="en">Mapping Detail</skos:prefLabel>
        <metadata-annotations:prefLabel_Plural xml:lang="en">Mapping Details</metadata-annotations:prefLabel_Plural>
        <skos:scopeNote xml:lang="en">MappingDetail is used (for example) when defining the transformation of an individual that is an enumerated value. It is used as the object for the property, mappedUsingDetail. 
MappingDetail is an underspecified class that is defined (and likely subclassed) in another ontology, to fit the needs of an application or domain. (In which case, the IRI of the corresponding class in the other ontology would be related using an owl:equivalentClass axiom.)

When using MappingDetail, it is mandatory that a mappedToTarget triple be defined.</skos:scopeNote>
        <skos:example xml:lang="en">http://some_namespace/detailIndividual with triples:
* http://some_namespace/entity_mappedFrom - mappedUsingDetail - http://some_namespace/detailIndividual
* http://some_namespace/detailIndividual - mappedToTarget - http://some_namespace/entity_mappedTo
* Subclass or other properties of http://some_namespace/detailIndividual define the transformation/calculation involved in the mapping (from the entity_mappedFrom to the entity_mappedTo)</skos:example>
    </owl:Class>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#Modification -->

    <owl:Class rdf:about="http://purl.org/ninepts/metadata/metadata-properties#Modification">
        <dc:description xml:lang="en">Describes a change or update to the entity defined as the subject of the hasModification object property.</dc:description>
        <skos:prefLabel xml:lang="en">Modification</skos:prefLabel>
        <skos:scopeNote xml:lang="en">Modification is designed to collect all the information related to a change or update to an individual.  This is important when one wants to track the specifics of each change as a set of related data.  This may not be important - for example, if one only wants to track the date of last modification or only track a description of each change.  In these cases, the data property, dateLastModified, or the annotation property, changeNote, can be the predicate of a triple involving the updated individual directly.

When Modification is used to collect the change information, it is mandatory that the modified individual be specified using the hasModification predicate (e.g., modifiedIndividual - hasModification - modificationIndividual). 

Since Modification collects the related change information, it is recommended that the following properties/predicates are specified for each instance:

 - dateModified (where dateModified is the data property defined in this ontology and not the annotation property)
 - contributor (reusing the annotation property, http://purl.org/dc/elements/1.1/contributor) or someActor - contributedTo - modificationIndividual (if actor/user individuals are available, and where contributedTo is the object property defined in this ontology)
 - changeNote (reusing the annotation property, http://www.w3.org/2004/02/skos/core#changeNote)

Note that additional properties may be defined for the Modification class, if desired.  Only the main concepts, related to the Dublin Core and SKOS definitions, are captured in this ontology.



</skos:scopeNote>
        <metadata-annotations:prefLabel_Plural xml:lang="en">Modifications</metadata-annotations:prefLabel_Plural>
        <skos:example xml:lang="en">http://some_namespace/modificationIndividual with triples:
* http://some_namespace/modifiedEntity - hasModification - http://some_namespace/modificationIndividual
* http://some_namespace/modificationIndividual - dateModified - dateTime value
* http://some_namespace/modificationIndividual - contributor - name string (or http://some_namespace/someActor - contributedTo - http://some_namespace/modificationIndividual)
* http://some_namespace/modificationIndividual - changeNote - modification details string</skos:example>
    </owl:Class>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->

