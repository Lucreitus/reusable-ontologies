<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY dc "http://purl.org/dc/elements/1.1/" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY skos "http://www.w3.org/2004/02/skos/core#" >
    <!ENTITY xml "http://www.w3.org/XML/1998/namespace" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY metadata-annotations "http://purl.org/ninepts/metadata/metadata-annotations#" >
]>


<rdf:RDF xmlns="http://purl.org/ninepts/metadata/metadata-properties#"
     xml:base="http://purl.org/ninepts/metadata/metadata-properties"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:metadata-annotations="http://purl.org/ninepts/metadata/metadata-annotations#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:skos="http://www.w3.org/2004/02/skos/core#">
    <owl:Ontology rdf:about="http://purl.org/ninepts/metadata/metadata-properties">
        <metadata-annotations:license rdf:datatype="&xsd;anyURI">http://opensource.org/licenses/MIT</metadata-annotations:license>
        <metadata-annotations:anotherFormat rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-properties.ofn</metadata-annotations:anotherFormat>
        <metadata-annotations:competencyQuery>PREFIX meta-props: &lt;http://purl.org/ninepts/metadata/metadata-properties#&gt; 
SELECT ?individual ?date WHERE {     
    { 
        ?individual meta-props:dateModified ?date . 
    } 
    UNION {
        ?individual meta-props:dateLastModified ?date . 
    } 
    UNION {
        ?individual meta-props:hasModification ?modification . 
        {
            {
                ?modification meta-props:dateCreated ?date . 
             }
             UNION {
                ?modification meta-props:dateModified ?date . 
             }
             UNION {
                ?modification meta-props:dateLastModified ?date . 
             }
        }  
    } 
}
# List the dates of any modifications to an individual.</metadata-annotations:competencyQuery>
        <metadata-annotations:competencyQuery>PREFIX meta-props: &lt;http://purl.org/ninepts/metadata/metadata-properties#&gt; 
SELECT ?individual ?date WHERE { 
    ?individual meta-props:dateCreated ?date . 
}
# List the date of creation for an individual.</metadata-annotations:competencyQuery>
        <metadata-annotations:competencyQuery>PREFIX meta-props: &lt;http://purl.org/ninepts/metadata/metadata-properties#&gt; 
SELECT ?individual ?mappedIndividual WHERE {
    ?individual meta-props:correspondsTo ?mappedIndividual . 
}
# Describe how one individual can be mapped/corresponds to another.</metadata-annotations:competencyQuery>
        <owl:priorVersion>0.1.0</owl:priorVersion>
        <metadata-annotations:competencyQuery>PREFIX meta-props: &lt;http://purl.org/ninepts/metadata/metadata-properties#&gt; 
SELECT ?contributor ?updatedIndividual WHERE { 
    { 
        ?contributor meta-props:contributedTo ?updatedIndividual . 
    } 
    UNION { 
        ?contributor meta-props:contributedTo ?modification . 
        ?updatedIndividual meta-props:hasModification ?modification . 
    } 
}
# Find all individuals who created or contributed to something (such as a book or trouble ticket)?</metadata-annotations:competencyQuery>
        <metadata-annotations:dateLastModified>2014-05-07</metadata-annotations:dateLastModified>
        <metadata-annotations:copyright xml:lang="en">Copyright (c) 2014 Nine Points Solutions, LLC</metadata-annotations:copyright>
        <metadata-annotations:competencyQuery>PREFIX meta-props: &lt;http://purl.org/ninepts/metadata/metadata-properties#&gt; 
SELECT ?individual ?identifier WHERE {
    ?individual meta-props:identifier ?identifier . 
}
# If an individual has an identifier, display it.</metadata-annotations:competencyQuery>
        <metadata-annotations:dateCreated>2014-05-01</metadata-annotations:dateCreated>
        <metadata-annotations:competencyQuery>PREFIX skos: &lt;http://www.w3.org/2004/02/skos/core#&gt;
SELECT ?metadata ?type ?example WHERE { 
    ?metadata skos:example ?example . 
   FILTER (
      regex(str(?metadata), &quot;metadata-properties&quot;) 
   ) 
}
# What examples are available of the use of each of the concepts in this ontology?</metadata-annotations:competencyQuery>
        <metadata-annotations:competencyQuery>PREFIX dc: &lt;http://purl.org/dc/elements/1.1/&gt; 
SELECT ?metadata ?type ?description WHERE { 
    ?metadata dc:description ?description . 
    FILTER (
       regex(str(?metadata), &quot;metadata-properties&quot;) 
    ) 
}
# What information is available as data or object properties from this ontology?  And, what are the definitions/descriptions of those properties?</metadata-annotations:competencyQuery>
        <metadata-annotations:keyword xml:lang="en">Dublin Core</metadata-annotations:keyword>
        <metadata-annotations:mimeType>application/rdf+xml</metadata-annotations:mimeType>
        <metadata-annotations:competencyQuery>PREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt; 
PREFIX skos: &lt;http://www.w3.org/2004/02/skos/core#&gt; 
PREFIX meta-props: &lt;http://purl.org/ninepts/metadata/metadata-properties#&gt; 
SELECT ?individual ?change WHERE { 
   ?individual rdf:type ?type . 
   { 
       ?individual skos:changeNote ?change . 
   } 
   UNION {
       ?individual meta-props:hasModification ?modification . 
       ?modification skos:changeNote ?change . 
   } .
   Filter (
      regex(str(?type), &quot;NamedIndividual&quot;)
   )
}
# Describe all changes to some individual.</metadata-annotations:competencyQuery>
        <metadata-annotations:competencyQuery>PREFIX meta: &lt;http://purl.org/ninepts/metadata/metadata-annotations#&gt; 
SELECT ?metadata ?annotation WHERE { 
    ?metadata meta:inspiredBy ?annotation . 
    FILTER (
      regex(str(?metadata), &quot;metadata-properties&quot;) 
    ) 
}
# How do the metadata properties correspond to the annotation properties?</metadata-annotations:competencyQuery>
        <metadata-annotations:license xml:lang="en">The MIT License (MIT)

Copyright (c) 2014 Nine Points Solutions, LLC

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the &quot;Software&quot;), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.</metadata-annotations:license>
        <dc:language>en-US</dc:language>
        <metadata-annotations:competencyQuery>PREFIX meta-props: &lt;http://purl.org/ninepts/metadata/metadata-properties#&gt; 
SELECT ?individual ?differentIndividual WHERE {
    { 
       ?individual meta-props:reorganizedAs ?differentIndividual . 
    }
    UNION {
       ?individual meta-props:translatedTo ?differentIndividual . 
    } 
}
# If an individual has been reorganized/reformatted or translated, list the resulting entities.</metadata-annotations:competencyQuery>
        <dc:creator>Andrea Westerinen
Nine Points Solutions, LLC</dc:creator>
        <metadata-annotations:competencyQuestions xml:lang="en">* What information is available as data or object properties from this ontology?  And, what are the definitions/descriptions of those properties?
* What examples are available of the use of each of the concepts in this ontology?
* How do the metadata properties correspond to the annotation properties?
* Find all individuals who created or contributed to some individual (such as a book or trouble ticket)?
* List the date of creation for an individual.  List the dates of any modifications to an individual.
* Describe all changes to some individual.
* Describe how one individual can be mapped/corresponds to another.
* If an individual has an identifier, display it.
* If an individual has been reorganized/reformatted or translated, list the resulting entities.</metadata-annotations:competencyQuestions>
        <skos:changeNote xml:lang="en">07 May 2014
* Renamed isAnotherFormatOf to hasAnotherFormat
* Removed MappingDetails and its properties since a separate ontology/more complete definition is required
* Removed hasMappingRelation and hasAnotherFormat since their semantics were too general to be useful
* Removed the irreflexive flag since it was making properties &quot;non-simple&quot;
* Added moreGeneral/SpecificThan, reorganizedAs and translatedTo as new object properties
* Completed the metadata details for the remaining properties
* Added competency questions and the competencyQueries</skos:changeNote>
        <skos:scopeNote xml:lang="en">It is important to note that not all concepts are included from the Dublin Core or SKOS sources; and of the concepts that are included, only a few are also mapped to data or object properties.  A list of the omitted concepts is provided in the scopeNote of the imported metadata-annotations ontology.

What follows is a list of the metadata-annotation ontology properties that are NOT also defined as data or object properties in this ontology (and why):

 - competencyQuery, competencyQuestions and mimeType - These strings only apply to an ontology, and are not appropriate for individuals.  Hence, they are not defined as data or object properties.
 - inspiredBy - This is relevant for definitions of classes, properties, etc. but at an individual level, its semantics are not useful. 
 - description, keyword, label, *Label, note and *Note - These properties are simple strings that would not benefit from further refinement as data or object properties.
 - language - This property is related to the language in which an ontology, class, property or individual is expressed.  It is a simple string, based on IETF RFC 4646.  If an enumerated data type is desired (or the values of the property should be based on a different controlled vocabulary or syntax), then a property could be defined in an importing ontology.  That level of specificity is not done in this ontology.
 - rights, copyright and license - These strings are recommended to be applied at an ontology level, to define its rights.  Associating deeper semantics and defining relationships should be handled in a legal ontology, and not as &quot;simple&quot; data and object properties.

It was noted in the description for this ontology that some supporting classes/concepts are specified.  These classes are Actor, MappingDetail and Modification.  They provide context for the object properties, contributedTo, created, hasModification and mappedUsingDetail.  It is important to understand that a minimum amount of information is provided for these classes.  They are defined/described, but are purposefully underspecified to allow application- or domain-specific details to be provided in another ontology.  (In which case, the IRIs of the corresponding classes in the other ontology would be related to Actor, MappingDetail and Modification using an owl:equivalentClass axiom.)

Lastly, it should be noted that the identifier property from Dublin Core IS specified in this metadata-properties ontology, but was not included in the metadata-annotations ontology.  This is because the concept of an identifier is best defined as a functional data property for an individual.  Also, since the Dublin Core property is &quot;officially&quot; defined as an annotation property, the namespace of the identifier functional property uses the namespace of this ontology.</skos:scopeNote>
        <skos:prefLabel xml:lang="en">Metadata Ontology (Using Annotation, Data and Object Properties)</skos:prefLabel>
        <dc:description xml:lang="en">Ontology providing a small, basic set of metadata concepts, based on Dublin Core and SKOS.  The concepts are defined as annotation properties (in the imported metadata-annotations ontology) and several are then specified as data or object properties.  This ontology includes supporting classes/concepts when required to fully define the object properties.</dc:description>
        <metadata-annotations:keyword xml:lang="en">SKOS</metadata-annotations:keyword>
        <metadata-annotations:keyword xml:lang="en">metadata</metadata-annotations:keyword>
        <owl:imports rdf:resource="http://purl.org/ninepts/metadata/metadata-annotations"/>
        <owl:versionIRI rdf:resource="http://purl.org/ninepts/metadata/metadata-properties/0.2.0"/>
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#contributedTo -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#contributedTo">
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/dc/elements/1.1/contributor</metadata-annotations:inspiredBy>
        <dc:description xml:lang="en">A relationship between an Actor (the subject) and an individual (the object) to which the Actor has made changes/contributions.</dc:description>
        <skos:scopeNote xml:lang="en">Contributors may be tracked directly for an individual (the actor that performed a change may be directly related to the modified instance using the contributedTo object property) or the changes may be described via a reification object, an instance of the Modification class.  

If a Modification instance is used, then the Actor &quot;contributes to&quot; the Modification instance, and the Modification instance is related to the individual being changed.

To find all contributors to an individual, one would query for the occurrence of any contributedTo properties - where the entity is the object, and also query for hasModification properties - where the entity is the subject, and then any actors which contributed to those modifications.</skos:scopeNote>
        <skos:prefLabel xml:lang="en">contributed to</skos:prefLabel>
        <skos:example xml:lang="en">http://some_namespace/someActor - contributedTo - http://some_namespace/someIndividual</skos:example>
        <skos:example xml:lang="en">http://some_namespace/someActor - contributedTo - http://some_namespace/someModificationIndividual</skos:example>
        <rdfs:domain rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#Actor"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#correspondsTo -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#correspondsTo">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-annotations#closeMatch</metadata-annotations:inspiredBy>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-annotations#exactMatch</metadata-annotations:inspiredBy>
        <dc:description xml:lang="en">A relationship between two individuals indicating that they have the same semantics.</dc:description>
        <skos:scopeNote xml:lang="en">An example of the use of this relationship is between two enumerations which use different vocabularies, or different languages.</skos:scopeNote>
        <skos:prefLabel xml:lang="en">corresponds to</skos:prefLabel>
        <skos:example xml:lang="en">http://some_namespace/someIndividual - correspondsTo - http://some_namespace/individualInAnotherVocabulary_orLanguage</skos:example>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#created -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#created">
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/dc/elements/1.1/creator</metadata-annotations:inspiredBy>
        <dc:description xml:lang="en">A relationship between an Actor (the subject) and something (the object) which the Actor produced/created.</dc:description>
        <skos:prefLabel xml:lang="en">created</skos:prefLabel>
        <skos:example xml:lang="en">http://some_namespace/someActor - created - http://some_namespace/createdIndividual</skos:example>
        <rdfs:domain rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#Actor"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#hasModification -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#hasModification">
        <dc:description xml:lang="en">A relationship between an individual (the subject) and a Modification instance which collects information about the change(s) made to the individual.  The Modification instance is described using data and object properties which define the date(s) of change, the contributors, changeNote(s), etc.</dc:description>
        <skos:prefLabel xml:lang="en">has modification</skos:prefLabel>
        <metadata-annotations:prefLabel_Plural xml:lang="en">has modifications</metadata-annotations:prefLabel_Plural>
        <skos:example xml:lang="en">http://some_namespace/someModifiedIndividual - hasModification - http://some_namespace/someModificationIndividual</skos:example>
        <rdfs:range rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#Modification"/>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#moreGeneralThan -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#moreGeneralThan">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-annotations#moreGeneralThan</metadata-annotations:inspiredBy>
        <dc:description xml:lang="en">A relationship between two individuals where the subject represents a more general concept than the object.</dc:description>
        <skos:scopeNote xml:lang="en">An example of the use of this relationship is between two enumerations which use different levels of specificity.</skos:scopeNote>
        <skos:example xml:lang="en">http://some_namespace/someIndividual - moreGeneralThan - http://some_namespace/some_moreSpecificIndividual</skos:example>
        <skos:prefLabel xml:lang="en">more general than</skos:prefLabel>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#moreSpecificThan -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#moreSpecificThan">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-annotations#moreSpecificThan</metadata-annotations:inspiredBy>
        <dc:description xml:lang="en">A relationship between two individuals where the subject represents a more specific concept than the object.</dc:description>
        <skos:scopeNote xml:lang="en">An example of the use of this relationship is between two enumerations which use different levels of specificity.</skos:scopeNote>
        <skos:example xml:lang="en">http://some_namespace/someIndividual - moreSpecificThan - http://some_namespace/some_moreGeneralIndividual</skos:example>
        <skos:prefLabel xml:lang="en">more specific than</skos:prefLabel>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#reorganizedAs -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#reorganizedAs">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-annotations#anotherFormat</metadata-annotations:inspiredBy>
        <dc:description xml:lang="en">A relationship between two individuals where they are substantially the same, but presented, organized, layed out, formatted, ... differently.</dc:description>
        <skos:scopeNote xml:lang="en">Note that this relationship is declared as transitive, meaning that a sequence of reorganizations/reformats could be traced for an individual.  It is not declared as symmetric, because each reorganization could introduce errors or expand/restrict concepts.</skos:scopeNote>
        <skos:example xml:lang="en">http://some_namespace/someIndividual - reorganizedAs - http://some_namespace/reformatted_reorganized_orNewLayoutIndividual</skos:example>
        <skos:prefLabel xml:lang="en">reorganized as</skos:prefLabel>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#replaces -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#replaces">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-annotations#replacementFor</metadata-annotations:inspiredBy>
        <dc:description xml:lang="en">A relationship between two individuals indicating that the object is supplanted, displaced or superceded by the subject.</dc:description>
        <skos:scopeNote xml:lang="en">Note that this relationship is declared as transitive, meaning that a sequence of replacements could be traced for an individual.</skos:scopeNote>
        <skos:example xml:lang="en">http://some_namespace/newer_evolvedIndividual - replaces - http://some_namespace/older_orOriginalIndividual</skos:example>
        <skos:prefLabel xml:lang="en">replaces</skos:prefLabel>
    </owl:ObjectProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#translatedTo -->

    <owl:ObjectProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#translatedTo">
        <rdf:type rdf:resource="&owl;TransitiveProperty"/>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-annotations#anotherFormat</metadata-annotations:inspiredBy>
        <dc:description xml:lang="en">A relationship between two individuals where they are substantially the same, but in different languages.</dc:description>
        <skos:example xml:lang="en">More specific example:
http://some_namespace/someDocument - translatedTo http://some_namespace/document_inSpanish</skos:example>
        <skos:scopeNote xml:lang="en">Note that this relationship is declared as transitive, meaning that a sequence of translations could be traced for an individual.  It is not declared as symmetric, because each translation could introduce errors or expand/restrict concepts.</skos:scopeNote>
        <skos:example xml:lang="en">http://some_namespace/someIndividual - translatedTo - http://some_namespace/someIndividual_inAnotherLanguage</skos:example>
        <skos:prefLabel xml:lang="en">translated to</skos:prefLabel>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#date -->

    <owl:DatatypeProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#date">
        <skos:example rdf:datatype="&xsd;dateTime">2014-05-07T18:37:42</skos:example>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/dc/elements/1.1/date</metadata-annotations:inspiredBy>
        <skos:example xml:lang="en">2014-01-01T12:12:00-5:00 (Jan 1 2014, 12:12 PM, Eastern Standard Time)</skos:example>
        <dc:description xml:lang="en">A point in time associated with an individual.</dc:description>
        <skos:scopeNote xml:lang="en">Use of this property is not recommended.  Instead, use one of its subproperties since they define explicit semantics.

Note that OWL only includes the dateTime and dateTimeStamp XSD datatypes.  DateTime is chosen as the datatype for this property, since a time zone is optional for that datatype.  

To only specify a date, it is recommended that the hh:mm:ss values for the property be set to 00:00:00.</skos:scopeNote>
        <skos:prefLabel xml:lang="en">date</skos:prefLabel>
        <metadata-annotations:prefLabel_Plural xml:lang="en">dates</metadata-annotations:prefLabel_Plural>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#dateCreated -->

    <owl:DatatypeProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#dateCreated">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <skos:example rdf:datatype="&xsd;dateTime">2014-05-07T18:37:42</skos:example>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-annotations#dateCreated</metadata-annotations:inspiredBy>
        <skos:example xml:lang="en">2014-01-01T12:12:00-5:00 (Jan 1 2014, 12:12 PM, Eastern Standard Time)</skos:example>
        <dc:description xml:lang="en">A point in time defining when an individual was created/produced.</dc:description>
        <skos:prefLabel xml:lang="en">date created</skos:prefLabel>
        <skos:scopeNote xml:lang="en">dateCreated is a functional property, so only 1 value should be defined for an individual.

Note that OWL only includes the dateTime and dateTimeStamp XSD datatypes.  DateTime is chosen as the datatype for this property, since a time zone is optional for that datatype.  

To only specify a date, it is recommended that the hh:mm:ss values for the property be set to 00:00:00.</skos:scopeNote>
        <rdfs:subPropertyOf rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#date"/>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#dateLastModified -->

    <owl:DatatypeProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#dateLastModified">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <skos:example rdf:datatype="&xsd;dateTime">2014-05-07T18:37:42</skos:example>
        <skos:example xml:lang="en">2014-01-01T12:12:00-5:00 (Jan 1 2014, 12:12 PM, Eastern Standard Time)</skos:example>
        <dc:description xml:lang="en">A point in time when the individual was last changed/updated.</dc:description>
        <skos:prefLabel xml:lang="en">date last modified</skos:prefLabel>
        <skos:scopeNote xml:lang="en">dateLastModified is a functional property, so only 1 value should be defined for an individual.

Note that OWL only includes the dateTime and dateTimeStamp XSD datatypes.  DateTime is chosen as the datatype for this property, since a time zone is optional for that datatype.  

To only specify a date, it is recommended that the hh:mm:ss values for the property be set to 00:00:00</skos:scopeNote>
        <rdfs:subPropertyOf rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#dateModified"/>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#dateModified -->

    <owl:DatatypeProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#dateModified">
        <skos:example rdf:datatype="&xsd;dateTime">2014-05-07T18:37:42</skos:example>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-annotations#dateLastModified</metadata-annotations:inspiredBy>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/ninepts/metadata/metadata-annotations#dateModified</metadata-annotations:inspiredBy>
        <skos:example xml:lang="en">2014-01-01T12:12:00-5:00 (Jan 1 2014, 12:12 PM, Eastern Standard Time)</skos:example>
        <dc:description xml:lang="en">A point in time when the individual was changed/updated.</dc:description>
        <skos:scopeNote xml:lang="en">Note that OWL only includes the dateTime and dateTimeStamp XSD datatypes.  DateTime is chosen as the datatype for this property, since a time zone is optional for that datatype.  

To only specify a date, it is recommended that the hh:mm:ss values for the property be set to 00:00:00</skos:scopeNote>
        <skos:prefLabel xml:lang="en">date modified</skos:prefLabel>
        <metadata-annotations:prefLabel_Plural xml:lang="en">dates modified</metadata-annotations:prefLabel_Plural>
        <rdfs:subPropertyOf rdf:resource="http://purl.org/ninepts/metadata/metadata-properties#date"/>
        <rdfs:range rdf:resource="&xsd;dateTime"/>
    </owl:DatatypeProperty>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#identifier -->

    <owl:DatatypeProperty rdf:about="http://purl.org/ninepts/metadata/metadata-properties#identifier">
        <rdf:type rdf:resource="&owl;FunctionalProperty"/>
        <metadata-annotations:inspiredBy rdf:datatype="&xsd;anyURI">http://purl.org/dc/elements/1.1/identifier</metadata-annotations:inspiredBy>
        <dc:description xml:lang="en">A unique, unambiguous reference to an individual.</dc:description>
        <skos:scopeNote xml:lang="en">This property is intended to operate as a globally unique ID.  For this reason, it is defined as a functional property.

If a preferred or alternative name (which varies by language or context) is being defined, use the prefLabel or altLabel annotation properties instead.</skos:scopeNote>
        <skos:prefLabel xml:lang="en">identifier</skos:prefLabel>
        <skos:example xml:lang="en">some_GUID</skos:example>
        <skos:example xml:lang="en">some_URI</skos:example>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#Actor -->

    <owl:Class rdf:about="http://purl.org/ninepts/metadata/metadata-properties#Actor">
        <dc:description xml:lang="en">A participant in an action, activity or process.  An actor may be a person, organization, hardware or software agent, etc.</dc:description>
        <skos:prefLabel xml:lang="en">Actor</skos:prefLabel>
        <metadata-annotations:prefLabel_Plural xml:lang="en">Actors</metadata-annotations:prefLabel_Plural>
        <skos:altLabel xml:lang="en">Agent</skos:altLabel>
        <metadata-annotations:altLabel_Plural xml:lang="en">Agents</metadata-annotations:altLabel_Plural>
        <skos:scopeNote xml:lang="en">In this ontology, an Actor is used as the subject for the properties, created and contributedTo.  It is an underspecified class that is detailed in another ontology, to fit the needs of a specific application or domain. (In which case, the IRIs of the corresponding classes in the other ontology would be related using an owl:equivalentClass axiom.)</skos:scopeNote>
        <skos:example xml:lang="en">http://some_namespace/hardwareOrSoftwareAgent</skos:example>
        <skos:example xml:lang="en">http://some_namespace/organizationName</skos:example>
        <skos:example xml:lang="en">http://some_namespace/userName_or_individualInDirectoryService</skos:example>
    </owl:Class>
    


    <!-- http://purl.org/ninepts/metadata/metadata-properties#Modification -->

    <owl:Class rdf:about="http://purl.org/ninepts/metadata/metadata-properties#Modification">
        <dc:description xml:lang="en">Describes a change (or coordinated set of changes) to an entity.  A Modification instance has data and object properties to define the date(s) of change, the contributors, changeNote(s), etc.  It is related to the updated entity via the hasModification object property.</dc:description>
        <skos:prefLabel xml:lang="en">Modification</skos:prefLabel>
        <skos:scopeNote xml:lang="en">Modification is designed to collect all the information related to a change or update to an individual.  This is important when one wants to track the specifics of each change as a set of related data.  This may not be important - for example, if one only wants to track the date of last modification or only track a description of each change.  In these cases, the data property, dateLastModified, or the annotation property, changeNote, can be the predicate of a triple involving the updated individual directly.

When Modification is used to collect the change information, it is mandatory that the modified individual be specified using the hasModification predicate (e.g., modifiedIndividual - hasModification - modificationIndividual). 

Since Modification collects the related change information, it is recommended that the following properties/predicates are specified for each instance:

 - dateModified (where dateModified is the data property defined in this ontology and not the annotation property)
 - contributor (reusing the annotation property, http://purl.org/dc/elements/1.1/contributor) or someActor - contributedTo - modificationIndividual (the latter is recommended when actor/user individuals are available) 
 - changeNote (reusing the annotation property, http://www.w3.org/2004/02/skos/core#changeNote)

Note that additional properties may be defined for the Modification class, if desired.  Only the main concepts, related to the Dublin Core and SKOS definitions, are captured in this ontology.



</skos:scopeNote>
        <metadata-annotations:prefLabel_Plural xml:lang="en">Modifications</metadata-annotations:prefLabel_Plural>
        <skos:example xml:lang="en">http://some_namespace/modificationIndividual with triples:
* http://some_namespace/modifiedIndividual - hasModification - http://some_namespace/modificationIndividual
* http://some_namespace/modificationIndividual - dateModified - dateTime value (or less recommended since the object is a literal value, http://some_namespace/modificationIndividual - annotations:dateModified - date time string)
* http://some_namespace/modificationIndividual - dc:contributor - name string (or http://some_namespace/someActor - contributedTo - http://some_namespace/modificationIndividual)
* http://some_namespace/modificationIndividual - skos:changeNote - modification details string</skos:example>
    </owl:Class>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->

